{
	"name": "MSGraph",
	"properties": {
		"description": "Calls the Get Users, Get Security Groups, Get Subscribed SKUs, and Get Users In Security Groups Graph APIs\n\nParameters:\nGroupsStartswith - Sets the starts-with filter for security groups\n\nStorageAccountContainer - Name of the storage container for files to be saved to (should be identical throughout pipelines\n\nStorageAccountFolder - Folder/folder structure within container where files will be saved (should be identical throughout pipelines)\n\nTopic - Prefix for filenames, should match pipeline name",
		"activities": [
			{
				"name": "Copy Users",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "setUnixTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "ADF_PipelineRunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "ADF_PipelineTriggerTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							{
								"name": "processedTimeStamp",
								"value": {
									"value": "@variables('UnixTimeStamp')",
									"type": "Expression"
								}
							},
							{
								"name": "processedDate",
								"value": {
									"value": "@formatDateTime(variables('TimeStamp'), 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"AbsoluteUrl": {
								"value": "$['@odata.nextLink']",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Copy Security Groups",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "setUnixTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "ADF_PipelineRunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "ADF_PipelineTriggerTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							{
								"name": "processedTimeStamp",
								"value": {
									"value": "@variables('UnixTimeStamp')",
									"type": "Expression"
								}
							},
							{
								"name": "processedDate",
								"value": {
									"value": "@formatDateTime(variables('TimeStamp'), 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"AbsoluteUrl": {
								"value": "$['@odata.nextLink']",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Copy subscribedSkus",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "setUnixTime",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.01:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"additionalColumns": [
							{
								"name": "ADF_PipelineRunId",
								"value": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								}
							},
							{
								"name": "ADF_PipelineTriggerTime",
								"value": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							},
							{
								"name": "processedTimeStamp",
								"value": {
									"value": "@variables('UnixTimeStamp')",
									"type": "Expression"
								}
							},
							{
								"name": "processedDate",
								"value": {
									"value": "@formatDateTime(variables('TimeStamp'), 'yyyy-MM-dd')",
									"type": "Expression"
								}
							}
						],
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"AbsoluteUrl": {
								"value": "$['@odata.nextLink']",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings",
							"filePattern": "arrayOfObjects"
						}
					},
					"enableStaging": false
				}
			},
			{
				"name": "Lookup Security Groups",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy Security Groups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Filter Security Groups",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lookup Security Groups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Security Groups').output.value[0].value",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().displayName, pipeline().parameters.GroupsStartswith)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "For Each Filtered Security Group",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter Security Groups",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, length(activity('Filter Security Groups').output.value))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy users in Security Groups",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "ADF_PipelineRunId",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										},
										{
											"name": "ADF_PipelineTriggerTime",
											"value": {
												"value": "@pipeline().TriggerTime",
												"type": "Expression"
											}
										},
										{
											"name": "GroupId",
											"value": {
												"value": "@activity('Filter Security Groups').output.value[item()].id",
												"type": "Expression"
											}
										},
										{
											"name": "processedTimeStamp",
											"value": {
												"value": "@variables('UnixTimeStamp')",
												"type": "Expression"
											}
										},
										{
											"name": "processedDate",
											"value": {
												"value": "@formatDateTime(variables('TimeStamp'), 'yyyy-MM-dd')",
												"type": "Expression"
											}
										}
									],
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"AbsoluteUrl": {
											"value": "$['@odata.nextLink']",
											"type": "Expression"
										},
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings",
										"filePattern": "arrayOfObjects"
									}
								},
								"enableStaging": false
							}
						}
					]
				}
			},
			{
				"name": "setTimestamp",
				"description": "Set the requestId to be the date.now()",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "TimeStamp",
					"value": {
						"value": "@utcnow()",
						"type": "Expression"
					}
				}
			},
			{
				"name": "setUnixTime",
				"description": "Set the requestId to be the date.now()",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "setTimestamp",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "UnixTimeStamp",
					"value": {
						"value": "@{div(sub(ticks(variables('timestamp')), ticks('1970-01-01')),10000000)}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Call load notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "For Each Filtered Security Group",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/kendale@carloconsultants.com/powerbi-monitor-databricks/topics/MSGraph/020_load",
					"baseParameters": {
						"date": {
							"value": "@formatDateTime(variables('TimeStamp'),'yyyy/MM/dd')",
							"type": "Expression"
						},
						"timestamp": {
							"value": "@variables('UnixTimeStamp')",
							"type": "Expression"
						},
						"topic": {
							"value": "@pipeline().parameters.Topic",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Call model notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "Call load notebook",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/kendale@carloconsultants.com/powerbi-monitor-databricks/topics/MSGraph/021_model"
				}
			}
		],
		"parameters": {
			"GroupsStartswith": {
				"type": "string",
				"defaultValue": "PBI-"
			},
			"StorageAccountContainer": {
				"type": "string",
				"defaultValue": "data-warehouse"
			},
			"StorageAccountFolder": {
				"type": "string",
				"defaultValue": "apiData/raw"
			},
			"Topic": {
				"type": "string",
				"defaultValue": "MSGraph"
			}
		},
		"variables": {
			"TimeStamp": {
				"type": "String"
			},
			"UnixTimeStamp": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Power BI monitor"
		},
		"annotations": [],
		"lastPublishTime": "2021-03-11T12:30:46Z"
	}
}