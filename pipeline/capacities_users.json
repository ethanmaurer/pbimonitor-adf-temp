{
	"name": "capacities_users",
	"properties": {
		"description": "PREREQ: capacities pipeline\n\nRecieves parameters from capacities pipeline and calls the Get Capacity Users REST admin API for each capacity.\n\nParameters:\nTopic - Prefix for filenames, should match pipeline name\n\nStorageAccountContainer - Name of the storage container for files to be saved to (should be identical throughout pipelines\n\nStorageAccountFolder - Folder/folder structure within container where files will be saved (should be identical throughout pipelines)\n\nTimeStamp - From scan_start, used for file naming\n\nUnixTimeStamp - From scan_start, used for file naming\n\n",
		"activities": [
			{
				"name": "Lookup capacities",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Capacity Id",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup capacities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@range(0, length(activity('Lookup capacities').output.value[0].value))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy capacity users",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "processedDate",
											"value": {
												"value": "@formatDateTime(pipeline().parameters.TimeStamp,'yyyy/MM/dd')",
												"type": "Expression"
											}
										},
										{
											"name": "processedTimeStamp",
											"value": {
												"value": "@pipeline().parameters.UnixTimeStamp",
												"type": "Expression"
											}
										},
										{
											"name": "capacityId",
											"value": {
												"value": "@activity('Lookup capacities').output.value[0].value[item()].id",
												"type": "Expression"
											}
										}
									],
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "API_PowerBI_Data",
									"type": "DatasetReference",
									"parameters": {
										"AdminAPI": {
											"value": "capacities/@{activity('Lookup capacities').output.value[0].value[item()].id}/users",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "JSON_ADLS",
									"type": "DatasetReference",
									"parameters": {
										"FileSystem": {
											"value": "@pipeline().parameters.StorageAccountContainer",
											"type": "Expression"
										},
										"Folder": {
											"value": "@concat(pipeline().parameters.StorageAccountFolder, '/', pipeline().parameters.topic, '_getCapacityUsers')",
											"type": "Expression"
										},
										"FileName": {
											"value": "@concat(pipeline().parameters.UnixTimeStamp, '/', item(), '-capacity-users.json')",
											"type": "Expression"
										},
										"TimeStamp": {
											"value": "@pipeline().parameters.TimeStamp",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Call load notebook",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "ForEach Capacity Id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Repos/kendale@carloconsultants.com/powerbi-monitor-databricks/topics/capacities/021_users",
					"baseParameters": {
						"topic": {
							"value": "@pipeline().parameters.topic",
							"type": "Expression"
						},
						"date": {
							"value": "@formatDateTime(pipeline().parameters.TimeStamp,'yyyy/MM/dd')",
							"type": "Expression"
						},
						"timestamp": {
							"value": "@pipeline().parameters.UnixTimeStamp",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Databricks",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"topic": {
				"type": "string",
				"defaultValue": "capacities_users"
			},
			"StorageAccountContainer": {
				"type": "string"
			},
			"StorageAccountFolder": {
				"type": "string"
			},
			"TimeStamp": {
				"type": "string"
			},
			"UnixTimeStamp": {
				"type": "string"
			}
		},
		"variables": {
			"capacities": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Power BI monitor"
		},
		"annotations": []
	}
}